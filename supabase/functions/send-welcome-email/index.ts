import { serve } from "https://deno.land/std@0.190.0/http/server.ts";
import { Resend } from "npm:resend@2.0.0";

const resend = new Resend(Deno.env.get("RESEND_API_KEY"));

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers": "authorization, x-client-info, apikey, content-type",
};

interface WelcomeEmailRequest {
  email: string;
  name: string;
  confirmUrl?: string;
}

const handler = async (req: Request): Promise<Response> => {
  console.log(`${req.method} request to send-welcome-email`);
  
  // Handle CORS preflight requests
  if (req.method === "OPTIONS") {
    return new Response(null, { headers: corsHeaders });
  }

  if (req.method !== "POST") {
    return new Response(JSON.stringify({ error: "Method not allowed" }), {
      status: 405,
      headers: { "Content-Type": "application/json", ...corsHeaders }
    });
  }

  try {
    const { email, name, confirmUrl }: WelcomeEmailRequest = await req.json();
    console.log(`Sending welcome email to: ${email}`);

    if (!email || !name) {
      return new Response(
        JSON.stringify({ error: "Email and name are required" }),
        {
          status: 400,
          headers: { "Content-Type": "application/json", ...corsHeaders }
        }
      );
    }

    const emailHtml = `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–≠–ú–ü!</title>
        </head>
        <body style="margin: 0; padding: 0; font-family: Arial, sans-serif; background-color: #0a0a0a; color: #ffffff;">
          <div style="max-width: 600px; margin: 0 auto; padding: 40px 20px;">
            <!-- Header -->
            <div style="text-align: center; margin-bottom: 40px;">
              <h1 style="color: #00ff94; font-size: 32px; margin: 0; font-weight: bold;">–ö–≠–ú–ü</h1>
              <p style="color: #888; margin: 8px 0 0 0; font-size: 16px;">–ö–ª—É–± –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ú—É–∂—Å–∫–æ–≥–æ –ü—Ä–æ–≥—Ä–µ—Å—Å–∞</p>
            </div>

            <!-- Main Content -->
            <div style="background-color: #1a1a1a; border: 1px solid #333; border-radius: 12px; padding: 32px; margin-bottom: 24px;">
              <h2 style="color: #00ff94; margin: 0 0 16px 0; font-size: 24px;">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${name}!</h2>
              
              <p style="color: #cccccc; line-height: 1.6; margin: 16px 0;">
                –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ –ö–≠–ú–ü! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫:
              </p>

              <ul style="color: #cccccc; line-height: 1.8; margin: 16px 0; padding-left: 20px;">
                <li><strong>–õ–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É</strong> –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</li>
                <li><strong>–°–∏—Å—Ç–µ–º–µ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏</strong> —Å –∑–∞–∫–∞–ª–∞–º–∏, –≥—Ä–∞–Ω—è–º–∏ –∏ —à—Ä–∞–º–∞–º–∏</li>
                <li><strong>–¢—Ä–µ–∫–µ—Ä—É –∞—Å–∫–µ–∑</strong> –¥–ª—è –ª–∏—á–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤</li>
                <li><strong>–¢–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤</strong> –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º</li>
              </ul>

              ${confirmUrl ? `
              <div style="text-align: center; margin: 32px 0;">
                <a href="${confirmUrl}" 
                   style="background-color: #00ff94; color: #000000; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: bold; display: inline-block;">
                  –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
                </a>
              </div>
              ` : ''}

              <p style="color: #cccccc; line-height: 1.6; margin: 24px 0 0 0;">
                –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –∫ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–º—É –ø—Ä–æ–≥—Ä–µ—Å—Å—É —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!
              </p>
            </div>

            <!-- Instructions -->
            <div style="background-color: #1a1a1a; border: 1px solid #333; border-radius: 12px; padding: 32px; margin-bottom: 24px;">
              <h3 style="color: #00ff94; margin: 0 0 16px 0; font-size: 20px;">–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:</h3>
              
              <ol style="color: #cccccc; line-height: 1.8; margin: 0; padding-left: 20px;">
                <li>–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</li>
                <li>–ò–∑—É—á–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —Å–∏—Å—Ç–µ–º–µ –ö–≠–ú–ü</li>
                <li>–ù–∞—á–Ω–∏—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</li>
                <li>–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∞—Å–∫–µ–∑—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ—Ç–µ–º–∞ "–ú–æ–Ω–∞—Ö"</li>
                <li>–°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –∫ —Ç–æ—Ç–µ–º–∞–º</li>
              </ol>
            </div>

            <!-- Footer -->
            <div style="text-align: center; color: #666; font-size: 14px; line-height: 1.6;">
              <p>–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ç—Ä–µ–Ω–µ—Ä–∞–º –∏–ª–∏ –∫—É—Ä–∞—Ç–æ—Ä–∞–º –∫–ª—É–±–∞.</p>
              <p style="margin-top: 16px;">
                <strong>–ö–≠–ú–ü</strong> - –≤–∞—à –ø—É—Ç—å –∫ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å—É
              </p>
            </div>
          </div>
        </body>
      </html>
    `;

    const emailResponse = await resend.emails.send({
      from: "–ö–≠–ú–ü <kemp.club@yandex.com>",
      to: [email],
      subject: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–≠–ú–ü! üèÜ",
      html: emailHtml,
      text: `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–≠–ú–ü, ${name}!

–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ –ö–≠–ú–ü!

–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫:
- –õ–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
- –°–∏—Å—Ç–µ–º–µ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –∑–∞–∫–∞–ª–∞–º–∏, –≥—Ä–∞–Ω—è–º–∏ –∏ —à—Ä–∞–º–∞–º–∏
- –¢—Ä–µ–∫–µ—Ä—É –∞—Å–∫–µ–∑ –¥–ª—è –ª–∏—á–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
- –¢–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º

${confirmUrl ? `–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é: ${confirmUrl}` : ''}

–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:
1. –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
2. –ò–∑—É—á–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —Å–∏—Å—Ç–µ–º–µ –ö–≠–ú–ü
3. –ù–∞—á–Ω–∏—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
4. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∞—Å–∫–µ–∑—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ—Ç–µ–º–∞ "–ú–æ–Ω–∞—Ö"
5. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –∫ —Ç–æ—Ç–µ–º–∞–º

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ç—Ä–µ–Ω–µ—Ä–∞–º –∏–ª–∏ –∫—É—Ä–∞—Ç–æ—Ä–∞–º –∫–ª—É–±–∞.

–ö–≠–ú–ü - –≤–∞—à –ø—É—Ç—å –∫ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å—É`
    });

    console.log("Welcome email sent successfully:", emailResponse);

    return new Response(JSON.stringify({ 
      success: true, 
      message: "Welcome email sent successfully",
      emailId: emailResponse.data?.id 
    }), {
      status: 200,
      headers: {
        "Content-Type": "application/json",
        ...corsHeaders,
      },
    });
  } catch (error: any) {
    console.error("Error in send-welcome-email function:", error);
    return new Response(
      JSON.stringify({ 
        error: error.message || "Failed to send welcome email",
        details: error.toString()
      }),
      {
        status: 500,
        headers: { "Content-Type": "application/json", ...corsHeaders },
      }
    );
  }
};

serve(handler);